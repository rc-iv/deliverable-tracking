// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  deals     Deal[]
  quickBooksTokens QuickBooksToken[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Deal {
  id           Int       @id @default(autoincrement())
  company      Company   @relation(fields: [companyId], references: [id])
  companyId    Int
  stage        String
  proposals    Proposal[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Proposal {
  id           Int            @id @default(autoincrement())
  deal         Deal           @relation(fields: [dealId], references: [id])
  dealId       Int
  items        ProposalItem[]
  totalAmount  Float
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model ProposalItem {
  id          Int        @id @default(autoincrement())
  proposal    Proposal   @relation(fields: [proposalId], references: [id])
  proposalId  Int
  deliverable Deliverable @relation(fields: [deliverableId], references: [id])
  deliverableId Int
  quantity    Int
  price       Float
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Deliverable {
  id            Int            @id @default(autoincrement())
  name          String
  description   String?
  basePrice     Float
  creator       Creator?       @relation(fields: [creatorId], references: [id])
  creatorId     Int?
  proposalItems ProposalItem[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Creator {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  deliverables Deliverable[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model QuickBooksToken {
  id               Int      @id @default(autoincrement())
  realmId          String   @unique
  accessToken      String
  refreshToken     String
  expiresAt        DateTime
  refreshExpiresAt DateTime
  company          Company? @relation(fields: [companyId], references: [id])
  companyId        Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
